services:
  api:
    image: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
    restart: always
    depends_on:
      - db
      - elasticsearch
      - minio
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:password@db:5432/moviesdb
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET_NAME: movies
      MINIO_SECURE: "false"
      MINIO_PUBLIC_URL: https://prod-team-3-uad8jq68.REDACTED:8005
      PUBLIC_URL: https://prod-team-3-uad8jq68.REDACTED
      PROXY: REDACTED
    networks:
      - app-network

  db:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: moviesdb
    ports:
      - "8002:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  elasticsearch:
    image: docker.io/elastic/elasticsearch:7.17.28
    restart: always
    volumes:
      - esdata:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "8003:9200"
      - "8004:9300"
    networks:
      - app-network
  
  minio:
    image: quay.io/minio/minio
    command: server /data --console-address ":9001"
    restart: always
    volumes:
      - minio_data:/data
    ports:
      - "8005:9000"
      - "8006:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    environment:
      - DOMAIN=prod-team-3-uad8jq68.REDACTED
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
    networks:
      - app-network

volumes:
  pgdata:
  esdata:
  minio_data:

networks:
  app-network:
    driver: bridge